{"version":3,"sources":["Slider/Slider.js","Result/Result.js","InterestCalculator/InterestCalculator.js","App.js","serviceWorker.js","index.js"],"names":["Slider","state","value","_this","props","min","changeValue","setState","onChange","_this2","this","react_default","a","createElement","className","title","type","disabled","max","e","target","React","Component","Result","interestRate","monthlyPayment","InterestCalculator","loan","amount","componentDidMount","getAmount","changeAmount","changeLoanDuration","_callee","response","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","stop","src_Slider_Slider","Result_Result","App","src_InterestCalculator_InterestCalculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2c508f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Slider extends React.Component {\r\n  state = {\r\n    value: this.props.min\r\n  };\r\n  changeValue = value => {\r\n    this.setState({\r\n      value: value\r\n    });\r\n    this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"slider-result\">\r\n          <h3>{this.props.title}</h3>\r\n          <input\r\n            className=\"result\"\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            disabled\r\n          />\r\n        </div>\r\n        <br />\r\n        <input\r\n          type=\"range\"\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          onChange={e => this.changeValue(e.target.value)}\r\n          value={this.state.value}\r\n          className=\"slider\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Result(props) {\r\n  return (\r\n    <div className=\"box\">\r\n      <h3 className=\"res\">Result</h3>\r\n      <hr />\r\n      <div className=\"interest\">\r\n        <h3>Interest rate: </h3>\r\n        <h3>{props.interestRate}</h3>\r\n      </div>\r\n      <hr />\r\n      <div className=\"monthly\">\r\n        <h3>Monthly payment: </h3>\r\n        <h3>{props.monthlyPayment}</h3>\r\n      </div>\r\n      <hr />\r\n      <div className=\"yearly\">\r\n        <h3>Yearly payment: </h3>\r\n        <h3>{props.monthlyPayment * 12}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Slider from \"../Slider/Slider\";\r\nimport Result from \"../Result/Result\";\r\nimport \"./style.css\";\r\n\r\nclass InterestCalculator extends React.Component {\r\n  state = {\r\n    loan: 6,\r\n    amount: 500,\r\n    interestRate: 0,\r\n    monthlyPayment: 0\r\n  };\r\n  componentDidMount = () => {\r\n    this.getAmount();\r\n  };\r\n  changeAmount = value => {\r\n    this.setState({\r\n      amount: value\r\n    });\r\n    this.getAmount();\r\n  };\r\n  changeLoanDuration = value => {\r\n    this.setState({\r\n      loan: value\r\n    });\r\n    this.getAmount();\r\n  };\r\n  getAmount = async () => {\r\n    const response = await fetch(\r\n      \"https://ftl-frontend-test.herokuapp.com/interest?amount=\" +\r\n        this.state.amount +\r\n        \"&numMonths=\" +\r\n        this.state.loan\r\n    );\r\n    const data = await response.json();\r\n    this.setState({\r\n      interestRate: data.interestRate,\r\n      monthlyPayment: data.monthlyPayment.amount\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"interest-calculator\">\r\n        <div className=\"slider-sec\">\r\n          <Slider\r\n            onChange={this.changeAmount}\r\n            title=\"Amount\"\r\n            min=\"500\"\r\n            max=\"5000\"\r\n          />\r\n          <Slider\r\n            onChange={this.changeLoanDuration}\r\n            title=\"Loan duration\"\r\n            min=\"6\"\r\n            max=\"24\"\r\n          />\r\n        </div>\r\n        <Result\r\n          interestRate={this.state.interestRate}\r\n          monthlyPayment={this.state.monthlyPayment}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InterestCalculator;\r\n","import React from \"react\";\nimport InterestCalculator from \"./InterestCalculator/InterestCalculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InterestCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}